!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/himanshu/Documents/c/c-examples/c-example-code/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
BSIZE	file_number_average.c	/^#define BSIZE /;"	d	file:
BSIZE	find_max_file_value.c	/^#define BSIZE /;"	d	file:
BUFFER_SIZE	dynamic_array_of_strings.c	/^#define BUFFER_SIZE /;"	d	file:
BUFFER_SIZE	if_elif_else.c	/^#define BUFFER_SIZE /;"	d	file:
BUFFER_SIZE	ifdef_ifndef.c	/^  #define BUFFER_SIZE /;"	d	file:
BUFFER_SIZE	infinite_buffer.c	/^#define BUFFER_SIZE /;"	d	file:
BUFFER_SIZE	integer_input.c	/^#define BUFFER_SIZE /;"	d	file:
BUFFER_SIZE	write_input_to_file.c	/^#define BUFFER_SIZE /;"	d	file:
Button	enum.c	/^typedef enum button { ON, OFF } Button;$/;"	t	typeref:enum:button	file:
COLS	fill_2d_random.c	/^#define COLS /;"	d	file:
COLS	init_2darray_user_input.c	/^#define COLS /;"	d	file:
COLS	matrix_addition.c	/^#define COLS /;"	d	file:
COLS	matrix_equality.c	/^#define COLS /;"	d	file:
COLS	matrix_subtraction.c	/^#define COLS /;"	d	file:
COLS	ouput_row_2D_array.c	/^#define COLS /;"	d	file:
COLS	output_col_2D_array.c	/^#define COLS /;"	d	file:
COLS	print_2d_array.c	/^#define COLS /;"	d	file:
COLS	set_random_2d_array_indexes.c	/^#define COLS /;"	d	file:
COLS	shuffle_2darray.c	/^#define COLS /;"	d	file:
COLS	swap_cols.c	/^#define COLS /;"	d	file:
COLS	swap_rows.c	/^#define COLS /;"	d	file:
COLS	twod_array.c	/^#define COLS /;"	d	file:
COLUMNS	col_sum_avg_2darray.c	/^#define COLUMNS /;"	d	file:
COLUMNS	readfile_into_2d_array.c	/^#define COLUMNS /;"	d	file:
COLUMNS	row_sum_avg_2darray.c	/^#define COLUMNS /;"	d	file:
COURSE_H	include_guards/course.h	/^#define COURSE_H /;"	d
Course	include_guards/course.h	/^} Course;$/;"	t	typeref:struct:__anon228106040108
DEBUG_MODE	ifdef_ifndef.c	/^#define DEBUG_MODE$/;"	d	file:
DEBUG_OUTPUT	activate_debug_output.c	/^#define DEBUG_OUTPUT /;"	d	file:
DECK_SIZE	shuffle_array.c	/^#define DECK_SIZE /;"	d	file:
Data	struct.c	/^} Data;$/;"	t	typeref:struct:__anon9112fa7b0308	file:
Data	unions.c	/^union Data$/;"	u	file:
Data2	unions.c	/^struct Data2$/;"	s	file:
Day	enum.c	/^enum Day { Monday, Tuesday = 9, Wednesday, Thursday, Friday = 20, $/;"	g	file:
FALSE	bool.c	/^#define FALSE /;"	d	file:
FILENAME_SIZE	add_file_line_numbers.c	/^#define FILENAME_SIZE /;"	d	file:
FILENAME_SIZE	delete_line.c	/^#define FILENAME_SIZE /;"	d	file:
FILENAME_SIZE	delete_lines_containing_chars.c	/^#define FILENAME_SIZE /;"	d	file:
FILENAME_SIZE	delete_matching_lines.c	/^#define FILENAME_SIZE /;"	d	file:
FILENAME_SIZE	read_line.c	/^#define FILENAME_SIZE /;"	d	file:
FILENAME_SIZE	replace_line.c	/^#define FILENAME_SIZE /;"	d	file:
FILENAME_SIZE	write_specific.c	/^#define FILENAME_SIZE /;"	d	file:
FUNC	if_elif_else.c	/^#define FUNC(/;"	d	file:
Friday	enum.c	/^enum Day { Monday, Tuesday = 9, Wednesday, Thursday, Friday = 20, $/;"	e	enum:Day	file:
HEADS	coin_toss.c	/^typedef enum coin {HEADS, TAILS} coin;$/;"	e	enum:coin	file:
INSTRUCTION	token_pasting_operator.c	/^#define INSTRUCTION(/;"	d	file:
Info	unions.c	/^} Info;$/;"	t	typeref:struct:__anon86543af20108	file:
Instruction	token_pasting_operator.c	/^} Instruction;$/;"	t	typeref:struct:__anon2b75dcd70108	file:
LENGTH	comments.c	/^#define LENGTH /;"	d	file:
LENGTH	constants.c	/^#define LENGTH /;"	d	file:
LENGTH	find_array_length.c	/^#define LENGTH(/;"	d	file:
LENGTH	tmpfile.c	/^#define LENGTH /;"	d	file:
LOWER	file_to_dynamic_string_optimized.c	/^#define LOWER /;"	d	file:
M	matrix_multiplication.c	/^#define M /;"	d	file:
M	matrix_transpose.c	/^#define M /;"	d	file:
M	twod_array.c	/^#define M /;"	d	file:
M2_PER_LITRE	litres_of_paint.c	/^#define M2_PER_LITRE /;"	d	file:
MAX	function_like_macros.c	/^#define MAX /;"	d	file:
MAX	join.c	/^#define MAX /;"	d	file:
MAX_ANSWER	quiz_game.c	/^#define MAX_ANSWER /;"	d	file:
MAX_CAPACITY	delete_array_element.c	/^#define MAX_CAPACITY /;"	d	file:
MAX_CAPACITY	insert_array_value.c	/^#define MAX_CAPACITY /;"	d	file:
MAX_LEN	file_lines_to_string_array.c	/^#define MAX_LEN /;"	d	file:
MAX_LINE	add_file_line_numbers.c	/^#define MAX_LINE /;"	d	file:
MAX_LINE	append_input_to_file.c	/^#define MAX_LINE /;"	d	file:
MAX_LINE	delete_line.c	/^#define MAX_LINE /;"	d	file:
MAX_LINE	delete_lines_containing_chars.c	/^#define MAX_LINE /;"	d	file:
MAX_LINE	delete_matching_lines.c	/^#define MAX_LINE /;"	d	file:
MAX_LINE	read_line.c	/^#define MAX_LINE /;"	d	file:
MAX_LINE	replace_line.c	/^#define MAX_LINE /;"	d	file:
MAX_LINE	write_specific.c	/^#define MAX_LINE /;"	d	file:
MAX_LINES	file_lines_to_string_array.c	/^#define MAX_LINES /;"	d	file:
MAX_QUESTION	quiz_game.c	/^#define MAX_QUESTION /;"	d	file:
MORE_CHARS	files_lines_to_dynamic_array.c	/^#define MORE_CHARS /;"	d	file:
MORE_LINES	files_lines_to_dynamic_array.c	/^#define MORE_LINES /;"	d	file:
Monday	enum.c	/^enum Day { Monday, Tuesday = 9, Wednesday, Thursday, Friday = 20, $/;"	e	enum:Day	file:
N	matrix_multiplication.c	/^#define N /;"	d	file:
N	matrix_transpose.c	/^#define N /;"	d	file:
N	twod_array.c	/^#define N /;"	d	file:
NDEBUG	dangling_pointers.c	/^#define NDEBUG$/;"	d	file:
Node	queue_linked_list.c	/^typedef struct Node$/;"	s	file:
Node	queue_linked_list.c	/^} Node;$/;"	t	typeref:struct:Node	file:
OFF	enum.c	/^typedef enum button { ON, OFF } Button;$/;"	e	enum:button	file:
ON	enum.c	/^typedef enum button { ON, OFF } Button;$/;"	e	enum:button	file:
OS	if_elif_else.c	/^#define OS$/;"	d	file:
P	matrix_multiplication.c	/^#define P /;"	d	file:
P	twod_array.c	/^#define P /;"	d	file:
PAPER	rock_paper_scissors.c	/^#define PAPER /;"	d	file:
PI	circle_circumference.c	/^#define PI /;"	d	file:
PI	cylinder_volume.c	/^#define PI /;"	d	file:
PI	function_like_macros.c	/^#define PI /;"	d	file:
PI	volume_of_a_sphere.c	/^#define PI /;"	d	file:
POSSIBLE_CHARACTERS	generate_random_character.c	/^#define POSSIBLE_CHARACTERS /;"	d	file:
Point	arrow_operator.c	/^} Point;$/;"	t	typeref:struct:__anon3e38de4c0108	file:
Point	dynamic_array_of_structs.c	/^} Point;$/;"	t	typeref:struct:__anon7853da440108	file:
Point	struct.c	/^} Point;$/;"	t	typeref:struct:__anon9112fa7b0208	file:
Queue	queue_linked_list.c	/^} Queue;$/;"	t	typeref:struct:__anon61cb19cc0108	file:
ROCK	rock_paper_scissors.c	/^#define ROCK /;"	d	file:
ROWS	col_sum_avg_2darray.c	/^#define ROWS /;"	d	file:
ROWS	fill_2d_random.c	/^#define ROWS /;"	d	file:
ROWS	init_2darray_user_input.c	/^#define ROWS /;"	d	file:
ROWS	matrix_addition.c	/^#define ROWS /;"	d	file:
ROWS	matrix_equality.c	/^#define ROWS /;"	d	file:
ROWS	matrix_subtraction.c	/^#define ROWS /;"	d	file:
ROWS	ouput_row_2D_array.c	/^#define ROWS /;"	d	file:
ROWS	output_col_2D_array.c	/^#define ROWS /;"	d	file:
ROWS	print_2d_array.c	/^#define ROWS /;"	d	file:
ROWS	readfile_into_2d_array.c	/^#define ROWS /;"	d	file:
ROWS	row_sum_avg_2darray.c	/^#define ROWS /;"	d	file:
ROWS	set_random_2d_array_indexes.c	/^#define ROWS /;"	d	file:
ROWS	shuffle_2darray.c	/^#define ROWS /;"	d	file:
ROWS	swap_cols.c	/^#define ROWS /;"	d	file:
ROWS	swap_rows.c	/^#define ROWS /;"	d	file:
ROWS	twod_array.c	/^#define ROWS /;"	d	file:
Response	libcurl_examples/store_http_response_into_string.c	/^} Response;$/;"	t	typeref:struct:__anon2063f8990108	file:
SCISSORS	rock_paper_scissors.c	/^#define SCISSORS /;"	d	file:
SIZE	find_array_length.c	/^#define SIZE /;"	d	file:
STRING_BUFFER_LENGTH	initialize_string_array_with_user_input.c	/^#define STRING_BUFFER_LENGTH /;"	d	file:
STUDENT_H	include_guards/student.h	/^#define STUDENT_H$/;"	d
Saturday	enum.c	/^          Saturday, Sunday};$/;"	e	enum:Day	file:
Set	sets.c	/^} Set;$/;"	t	typeref:struct:__anon1b857b750108	file:
Stack	stack.c	/^} Stack;$/;"	t	typeref:struct:__anonadd2b0ec0108	file:
Student	array_of_structs_to_csv.c	/^} Student;$/;"	t	typeref:struct:__anonb044834d0108	file:
Student	csv_to_struct_array.c	/^} Student;$/;"	t	typeref:struct:__anon4fd7ece60108	file:
Student	include_guards/student.h	/^} Student;$/;"	t	typeref:struct:__anon3612813a0108
Student	own_memcpy.c	/^} Student;$/;"	t	typeref:struct:__anon833ba4340108	file:
Student	struct.c	/^} Student;$/;"	t	typeref:struct:__anon9112fa7b0108	file:
Student	struct_array_binary_file.c	/^} Student;$/;"	t	typeref:struct:__anon85ca999c0108	file:
Sunday	enum.c	/^          Saturday, Sunday};$/;"	e	enum:Day	file:
TAILS	coin_toss.c	/^typedef enum coin {HEADS, TAILS} coin;$/;"	e	enum:coin	file:
TOTAL_BUFFERS	if_elif_else.c	/^#define TOTAL_BUFFERS /;"	d	file:
TOTAL_QUESTIONS	quiz_game.c	/^#define TOTAL_QUESTIONS /;"	d	file:
TOTAL_STRINGS	initialize_string_array_with_user_input.c	/^#define TOTAL_STRINGS /;"	d	file:
TOTAL_STUDENTS	array_of_structs_to_csv.c	/^#define TOTAL_STUDENTS /;"	d	file:
TRUE	bool.c	/^#define TRUE /;"	d	file:
Thursday	enum.c	/^enum Day { Monday, Tuesday = 9, Wednesday, Thursday, Friday = 20, $/;"	e	enum:Day	file:
Tuesday	enum.c	/^enum Day { Monday, Tuesday = 9, Wednesday, Thursday, Friday = 20, $/;"	e	enum:Day	file:
UPPER	file_to_dynamic_string_optimized.c	/^#define UPPER /;"	d	file:
VALUE	if_elif_else.c	/^  #define VALUE /;"	d	file:
VERSION_CODE	if_elif_else.c	/^#define VERSION_CODE /;"	d	file:
WINDOWS	ifdef_ifndef.c	/^#define WINDOWS$/;"	d	file:
Wednesday	enum.c	/^enum Day { Monday, Tuesday = 9, Wednesday, Thursday, Friday = 20, $/;"	e	enum:Day	file:
__anon1b857b750108	sets.c	/^typedef struct {$/;"	s	file:
__anon2063f8990108	libcurl_examples/store_http_response_into_string.c	/^{$/;"	s	file:
__anon228106040108	include_guards/course.h	/^{$/;"	s
__anon2b75dcd70108	token_pasting_operator.c	/^{$/;"	s	file:
__anon3612813a0108	include_guards/student.h	/^{$/;"	s
__anon3e38de4c0108	arrow_operator.c	/^typedef struct {$/;"	s	file:
__anon4fd7ece60108	csv_to_struct_array.c	/^{$/;"	s	file:
__anon61cb19cc0108	queue_linked_list.c	/^{$/;"	s	file:
__anon7853da440108	dynamic_array_of_structs.c	/^typedef struct {$/;"	s	file:
__anon833ba4340108	own_memcpy.c	/^{$/;"	s	file:
__anon85ca999c0108	struct_array_binary_file.c	/^{$/;"	s	file:
__anon86543af20108	unions.c	/^{$/;"	s	file:
__anon86543af2020a	unions.c	/^  union {$/;"	u	struct:__anon86543af20108	file:
__anon88cc90d80108	quiz_game.c	/^{$/;"	s	file:
__anon9112fa7b0108	struct.c	/^{$/;"	s	file:
__anon9112fa7b0208	struct.c	/^{$/;"	s	file:
__anon9112fa7b0308	struct.c	/^{$/;"	s	file:
__anonadd2b0ec0108	stack.c	/^{$/;"	s	file:
__anonb044834d0108	array_of_structs_to_csv.c	/^{$/;"	s	file:
_strcat	own_strcat.c	/^char *_strcat(char *destination, const char *source)$/;"	f	typeref:typename:char *
_strchr	own_strchr.c	/^char *_strchr(const char *str, int c)$/;"	f	typeref:typename:char *
_strncpy	strncpy_implementation.c	/^char *_strncpy(char *dest, const char *src, size_t n)$/;"	f	typeref:typename:char *
_strpbrk	strpbrk_implementation.c	/^char *_strpbrk(const char *str1, const char *str2)$/;"	f	typeref:typename:char *
_strspn	own_strspn.c	/^size_t _strspn(const char *str1, const char *str2)$/;"	f	typeref:typename:size_t
add	array_pass.c	/^void add(int x)$/;"	f	typeref:typename:void
add	basic_library/library.c	/^int add(int x, int y)$/;"	f	typeref:typename:int
add	function_pointers.c	/^double add(double x, double y) { return x + y; }$/;"	f	typeref:typename:double
add	functions.c	/^int add(int a, int b)$/;"	f	typeref:typename:int
add_instruction	token_pasting_operator.c	/^void add_instruction(void)$/;"	f	typeref:typename:void
add_one	extern_share_global_variable/library.c	/^void add_one()$/;"	f	typeref:typename:void
add_one	static_global_variable/library.c	/^void add_one()$/;"	f	typeref:typename:void
age	array_of_structs_to_csv.c	/^  int age;$/;"	m	struct:__anonb044834d0108	typeref:typename:int	file:
age	csv_to_struct_array.c	/^  int age;$/;"	m	struct:__anon4fd7ece60108	typeref:typename:int	file:
age	own_memcpy.c	/^  int age;$/;"	m	struct:__anon833ba4340108	typeref:typename:int	file:
age	struct.c	/^  int age;$/;"	m	struct:__anon9112fa7b0108	typeref:typename:int	file:
age	struct_array_binary_file.c	/^  int age;$/;"	m	struct:__anon85ca999c0108	typeref:typename:int	file:
all_unique	check_if_all_chars_unique.c	/^bool all_unique(char *string)$/;"	f	typeref:typename:bool
all_unique2	check_if_all_chars_unique.c	/^bool all_unique2(char *string)$/;"	f	typeref:typename:bool
allocate	memory_leaks.c	/^int *allocate()$/;"	f	typeref:typename:int *
allocate_two	return_multiple_dynamic.c	/^void allocate_two(int **a1, int **a2, int length)$/;"	f	typeref:typename:void
answerA	quiz_game.c	/^  char answerA[MAX_ANSWER];$/;"	m	struct:__anon88cc90d80108	typeref:typename:char[]	file:
answerB	quiz_game.c	/^  char answerB[MAX_ANSWER];$/;"	m	struct:__anon88cc90d80108	typeref:typename:char[]	file:
answerC	quiz_game.c	/^  char answerC[MAX_ANSWER];$/;"	m	struct:__anon88cc90d80108	typeref:typename:char[]	file:
answerD	quiz_game.c	/^  char answerD[MAX_ANSWER];$/;"	m	struct:__anon88cc90d80108	typeref:typename:char[]	file:
area	function_like_macros.c	/^#define area(/;"	d	file:
array	struct.c	/^  int *array;$/;"	m	struct:__anon9112fa7b0308	typeref:typename:int *	file:
array_add	array_pass.c	/^void array_add(int array[])$/;"	f	typeref:typename:void
array_add_ptr	array_pass.c	/^void array_add_ptr(int *array)$/;"	f	typeref:typename:void
array_copy	array_copy.c	/^int *array_copy(int *array, int length)$/;"	f	typeref:typename:int *
average	array_of_structs_to_csv.c	/^  double average;$/;"	m	struct:__anonb044834d0108	typeref:typename:double	file:
average	csv_to_struct_array.c	/^  double average;$/;"	m	struct:__anon4fd7ece60108	typeref:typename:double	file:
average	own_memcpy.c	/^  double average;$/;"	m	struct:__anon833ba4340108	typeref:typename:double	file:
average	recursive_array_average.c	/^double average(double a[], int n)$/;"	f	typeref:typename:double
average	struct_array_binary_file.c	/^  double average;$/;"	m	struct:__anon85ca999c0108	typeref:typename:double	file:
avg	array_average.c	/^double avg(double array[], int length)$/;"	f	typeref:typename:double
bad_global_method	return_a_string.c	/^void bad_global_method()$/;"	f	typeref:typename:void
bad_static_method	return_a_string.c	/^char *bad_static_method()$/;"	f	typeref:typename:char *
balance	mutex/bank.c	/^int balance = 0;$/;"	v	typeref:typename:int
balance	race_condition_example/bank.c	/^int balance = 0;$/;"	v	typeref:typename:int
bar	do_while_0_macro_pattern.c	/^void bar(int x) { printf("%d\\n", x); }$/;"	f	typeref:typename:void
binary_search	binary_search.c	/^int binary_search(int a[], int e, int l, int r)$/;"	f	typeref:typename:int
bubble_sort	bubble_sort.c	/^void bubble_sort(int a[], int length)$/;"	f	typeref:typename:void
buffer	unions.c	/^  } buffer;$/;"	m	struct:__anon86543af20108	typeref:union:__anon86543af20108::__anon86543af2020a	file:
button	enum.c	/^typedef enum button { ON, OFF } Button;$/;"	g	file:
calculate_circumference	circle_circumference.c	/^double calculate_circumference(double radius)$/;"	f	typeref:typename:double
capacity	stack.c	/^  int capacity;$/;"	m	struct:__anonadd2b0ec0108	typeref:typename:int	file:
check_anagram	anagram_checker.c	/^bool check_anagram(char *w1, char *w2)$/;"	f	typeref:typename:bool
check_palindrome	palindrome_recursion.c	/^bool check_palindrome(char *string, int left, int right)$/;"	f	typeref:typename:bool
check_value	comma_operator.c	/^int check_value(int value)$/;"	f	typeref:typename:int
cleanup	abort.c	/^void cleanup()$/;"	f	typeref:typename:void
cleanup	atexit.c	/^void cleanup()$/;"	f	typeref:typename:void
coin	coin_toss.c	/^typedef enum coin {HEADS, TAILS} coin;$/;"	g	file:
coin	coin_toss.c	/^typedef enum coin {HEADS, TAILS} coin;$/;"	t	typeref:enum:coin	file:
col_swap	swap_cols.c	/^void col_swap(int array[ROWS][COLS], int colA, int colB)$/;"	f	typeref:typename:void
collection	stack.c	/^  int *collection;$/;"	m	struct:__anonadd2b0ec0108	typeref:typename:int *	file:
compare	qsort.c	/^int compare(const void *x_void, const void *y_void)$/;"	f	typeref:typename:int
computation	thread_intro.c	/^void *computation(void *add)$/;"	f	typeref:typename:void *
concat	array_concat.c	/^int *concat(int *a1, size_t len1, int *a2, size_t len2)$/;"	f	typeref:typename:int *
convert	binary_to_decimal.c	/^int convert(char *string)$/;"	f	typeref:typename:int
convert_vowels	convert_vowels_uppercase.c	/^void convert_vowels(char *s)$/;"	f	typeref:typename:void
correct_answer	quiz_game.c	/^  char correct_answer;$/;"	m	struct:__anon88cc90d80108	typeref:typename:char	file:
count_char	count_char.c	/^int count_char(char *s, char c)$/;"	f	typeref:typename:int
count_digits	count_digits.c	/^int count_digits(char *s)$/;"	f	typeref:typename:int
count_letters	count_letters.c	/^int count_letters(char *s)$/;"	f	typeref:typename:int
count_lowercase	count_lowercase.c	/^int count_lowercase(char *string)$/;"	f	typeref:typename:int
count_occurrences	count_chars_recursion.c	/^int count_occurrences(char *string, char c)$/;"	f	typeref:typename:int
count_punct	count_punct.c	/^int count_punct(char *s)$/;"	f	typeref:typename:int
count_spaces	count_spaces.c	/^int count_spaces(char *string)$/;"	f	typeref:typename:int
count_unique	count_unique.c	/^int count_unique(int a[], int length)$/;"	f	typeref:typename:int
count_uppercase	count_uppercase_letters.c	/^int count_uppercase(char *string)$/;"	f	typeref:typename:int
count_vowels	count_vowels_recursion.c	/^int count_vowels(char *string)$/;"	f	typeref:typename:int
count_whitespace	count_whitespace.c	/^int count_whitespace(char *string)$/;"	f	typeref:typename:int
countdown	direct_vs_indirect_recursion.c	/^void countdown(int n)$/;"	f	typeref:typename:void
create_dynamic	return_multiple_dynamic.c	/^int *create_dynamic(int length)$/;"	f	typeref:typename:int *
create_matrix	return_dynamic_2d_array.c	/^int **create_matrix(int m, int n, int fill_value)$/;"	f	typeref:typename:int **
create_queue	queue_linked_list.c	/^Queue *create_queue()$/;"	f	typeref:typename:Queue *
create_stack	stack.c	/^Stack *create_stack(int capacity)$/;"	f	typeref:typename:Stack *
cylinder_volume	cylinder_volume.c	/^double cylinder_volume(double radius, double height)$/;"	f	typeref:typename:double
data	structure_padding.c	/^struct data$/;"	s	file:
delete	delete_substring.c	/^void delete(char string[], char substr[])$/;"	f	typeref:typename:void
deposit	mutex/main.c	/^void* deposit(void *amount)$/;"	f	typeref:typename:void *
deposit	race_condition_example/main.c	/^void* deposit(void *amount)$/;"	f	typeref:typename:void *
dequeue	queue_linked_list.c	/^int dequeue(Queue *queue, bool *status)$/;"	f	typeref:typename:int
description	dynamic_array_of_structs.c	/^  char *description;$/;"	m	struct:__anon7853da440108	typeref:typename:char *	file:
destroy_queue	queue_linked_list.c	/^void destroy_queue(Queue *queue)$/;"	f	typeref:typename:void
destroy_stack	stack.c	/^void destroy_stack(Stack *stack)$/;"	f	typeref:typename:void
divide	function_pointers.c	/^int divide(int x, int y) { return x \/ y; }$/;"	f	typeref:typename:int
do_work	dangling_pointers.c	/^int do_work(int *ptr)$/;"	f	typeref:typename:int
dot_product	dot_product.c	/^float dot_product(float v1[], float v2[], int length)$/;"	f	typeref:typename:float
double_round	round_double.c	/^double double_round(double value, int decimal_places)$/;"	f	typeref:typename:double
dump_file	clearerr.cpp	/^void dump_file(FILE *file)$/;"	f	typeref:typename:void
dynamic_string_truncate	dynamic_string_truncate.c	/^char *dynamic_string_truncate(char *string, int n)$/;"	f	typeref:typename:char *
element_product	array_element_product.c	/^int element_product(int array[], int length)$/;"	f	typeref:typename:int
end	atexit.c	/^time_t start, end;$/;"	v	typeref:typename:time_t
endswith	endswith.c	/^bool endswith(char *string, char *end)$/;"	f	typeref:typename:bool
enqueue	queue_linked_list.c	/^void enqueue(Queue *queue, int value)$/;"	f	typeref:typename:void
f	static_local_variables.c	/^void f()$/;"	f	typeref:typename:void
fact	single_vs_multiple_recursion.c	/^int fact(int n)$/;"	f	typeref:typename:int
factorial	factorial_loop.c	/^size_t factorial(size_t n)$/;"	f	typeref:typename:size_t
factorial	factorial_recursion.c	/^int factorial(int n)$/;"	f	typeref:typename:int
factorial	recursion.c	/^int factorial(int n)$/;"	f	typeref:typename:int
fib	fib.c	/^int fib(int n)$/;"	f	typeref:typename:int
fib	single_vs_multiple_recursion.c	/^int fib(int n)$/;"	f	typeref:typename:int
fill_random	fill_2d_random.c	/^void fill_random(int array[ROWS][COLS], int max)$/;"	f	typeref:typename:void
fill_random	fill_random.c	/^void fill_random(int array[], int length, int max)$/;"	f	typeref:typename:void
fill_unique	fill_random_unique.c	/^void fill_unique(int array[], int length, int min, int max)$/;"	f	typeref:typename:void
find_character	check_char_in_string.c	/^bool find_character(char string[], char to_find)$/;"	f	typeref:typename:bool
find_index	find_k_sorted_array.c	/^int find_index(int array[], int length, int K)$/;"	f	typeref:typename:int
find_max	find_max.c	/^int find_max(int array[], int length)$/;"	f	typeref:typename:int
find_max	function_like_macros.c	/^#define find_max(/;"	d	file:
find_min	find_min.c	/^int find_min(int array[], int length)$/;"	f	typeref:typename:int
find_min_sum_pair	elems_closest_to_zero.c	/^void find_min_sum_pair(int array[], int length)$/;"	f	typeref:typename:void
first_occurrence	find_first_char_occurrence.c	/^int first_occurrence(char string[], char character)$/;"	f	typeref:typename:int
flipCoin	coin_toss.c	/^coin flipCoin()$/;"	f	typeref:typename:coin
foo	do_while_0_macro_pattern.c	/^#define foo(/;"	d	file:
freeze_C	function_pointers.c	/^bool freeze_C(int temperature) {$/;"	f	typeref:typename:bool
freeze_F	function_pointers.c	/^bool freeze_F(int temperature) {$/;"	f	typeref:typename:bool
func	exit.c	/^void func()$/;"	f	typeref:typename:void
func	variable_scope.c	/^void func(int a)$/;"	f	typeref:typename:void
func1	int_main_void_difference.c	/^void func1()$/;"	f	typeref:typename:void
func2	int_main_void_difference.c	/^void func2(void)$/;"	f	typeref:typename:void
function	comma_operator.c	/^int function(int a, int b, int c) { return a + b + c; }$/;"	f	typeref:typename:int
function	designated_initializers.c	/^int function(int a)$/;"	f	typeref:typename:int
function	function_pointers.c	/^void function(int x) $/;"	f	typeref:typename:void
function	function_vs_&function.c	/^void function()$/;"	f	typeref:typename:void
function	measure_execution_time.c	/^void function()$/;"	f	typeref:typename:void
function	token_pasting_operator.c	/^  void (*function) (void);$/;"	m	struct:__anon2b75dcd70108	typeref:typename:void (*)(void)	file:
function1	local_vs_global_variables.c	/^void function1()$/;"	f	typeref:typename:void
function1	stack_overflow.c	/^void function1()$/;"	f	typeref:typename:void
function2	stack_overflow.c	/^void function2()$/;"	f	typeref:typename:void
global	local_vs_global_variables.c	/^int global = 50;$/;"	v	typeref:typename:int
global_array	return_a_string.c	/^char global_array[256];$/;"	v	typeref:typename:char[256]
grades	struct.c	/^  int grades[5];$/;"	m	struct:__anon9112fa7b0108	typeref:typename:int[5]	file:
head	queue_linked_list.c	/^  Node *head;$/;"	m	struct:__anon61cb19cc0108	typeref:typename:Node *	file:
id	include_guards/student.h	/^  int id;$/;"	m	struct:__anon3612813a0108	typeref:typename:int
id	struct.c	/^  char id[10];$/;"	m	struct:__anon9112fa7b0108	typeref:typename:char[10]	file:
inc	function_like_macros.c	/^#define inc(/;"	d	file:
incidents	detached_threads.c	/^int incidents = 0;$/;"	v	typeref:typename:int
includes	array_includes.c	/^bool includes(int array[], int length, int value)$/;"	f	typeref:typename:bool
increment	function_like_macros.c	/^int increment()$/;"	f	typeref:typename:int
increment	void_function_return.c	/^int increment(int x)$/;"	f	typeref:typename:int
init	sets.c	/^Set* init()$/;"	f	typeref:typename:Set *
insert	sets.c	/^void insert(Set *set, int member)$/;"	f	typeref:typename:void
insertion_sort	insertion_sort.c	/^void insertion_sort(int a[], int length)$/;"	f	typeref:typename:void
isPrime	prime_check_recursion.c	/^bool isPrime(int n)$/;"	f	typeref:typename:bool
is_armstrong	armstrong_checker.c	/^bool is_armstrong(int number)$/;"	f	typeref:typename:bool
is_disjoint	disjoint_arrays.c	/^bool is_disjoint(int a1[], int l1, int a2[], int l2)$/;"	f	typeref:typename:bool
is_empty	queue_linked_list.c	/^bool is_empty(Queue *queue)$/;"	f	typeref:typename:bool
is_empty	sets.c	/^bool is_empty(Set *set)$/;"	f	typeref:typename:bool
is_empty	stack.c	/^bool is_empty(Stack *stack)$/;"	f	typeref:typename:bool
is_even	check_parity.c	/^bool is_even(int number)$/;"	f	typeref:typename:bool
is_freezing	function_pointers.c	/^void is_freezing( bool (*freeze_check)(int) ){$/;"	f	typeref:typename:void
is_full	stack.c	/^bool is_full(Stack *stack)$/;"	f	typeref:typename:bool
is_leap_year	is_leap_year.c	/^bool is_leap_year(int year)$/;"	f	typeref:typename:bool
is_member	sets.c	/^bool is_member(Set *set, int value)$/;"	f	typeref:typename:bool
is_odd	check_parity.c	/^bool is_odd(int number)$/;"	f	typeref:typename:bool
is_palindrome	palindrome.c	/^bool is_palindrome(char string[])$/;"	f	typeref:typename:bool
is_palindrome	palindrome_recursion.c	/^bool is_palindrome(char *string)$/;"	f	typeref:typename:bool
is_postal_code	postal_code.c	/^bool is_postal_code(char postal_code[])$/;"	f	typeref:typename:bool
is_prime	is_prime.c	/^bool is_prime(int number)$/;"	f	typeref:typename:bool
is_rotation	is_rotation.c	/^bool is_rotation(char *s1, char *s2)$/;"	f	typeref:typename:bool
is_subset	sets.c	/^bool is_subset(Set *setA, Set *setB)$/;"	f	typeref:typename:bool
is_substring	check_substring.c	/^bool is_substring(char *check, char *string)$/;"	f	typeref:typename:bool
join	join.c	/^char *join(char strings[][MAX], int count, char *separator)$/;"	f	typeref:typename:char *
join2	join.c	/^char *join2(char **strings, int count, char *separator)$/;"	f	typeref:typename:char *
kilometer	typedef.c	/^typedef int kilometer;$/;"	t	typeref:typename:int	file:
km_to_miles	distconvert.c	/^double km_to_miles(double km) { return km * 0.62137; }$/;"	f	typeref:typename:double
km_to_nautical_miles	distconvert.c	/^double km_to_nautical_miles(double km) { return km * 0.539957; }$/;"	f	typeref:typename:double
largest_word	largest_word.c	/^int largest_word(char *s)$/;"	f	typeref:typename:int
largest_word	largest_word_print.c	/^char* largest_word(char *s)$/;"	f	typeref:typename:char *
last_occurrence	find_last_char_occurrence.c	/^int last_occurrence(char string[], char character)$/;"	f	typeref:typename:int
length	sets.c	/^  int length;      \/\/ the number of members of the set$/;"	m	struct:__anon1b857b750108	typeref:typename:int	file:
length_error	void_function_return.c	/^void length_error()$/;"	f	typeref:typename:void
letter_flip	letter_flip.c	/^void letter_flip(char *s)$/;"	f	typeref:typename:void
log_file	detached_threads.c	/^FILE *log_file;$/;"	v	typeref:typename:FILE *
log_message	static_local_variables.c	/^void log_message(char *message)$/;"	f	typeref:typename:void
logger	detached_threads.c	/^void *logger()$/;"	f	typeref:typename:void *
logger	predefined_macros.c	/^void logger(char *msg, char *src, int line)$/;"	f	typeref:typename:void
main	_Bool.c	/^int main(void)$/;"	f	typeref:typename:int
main	_chdir.c	/^int main(void)$/;"	f	typeref:typename:int
main	_getcwd.c	/^int main(void)$/;"	f	typeref:typename:int
main	_mkdir.c	/^int main(void)$/;"	f	typeref:typename:int
main	_rmdir.c	/^int main(void)$/;"	f	typeref:typename:int
main	abort.c	/^int main(void)$/;"	f	typeref:typename:int
main	absolute_value.c	/^int main(void)$/;"	f	typeref:typename:int
main	activate_debug_output.c	/^int main()$/;"	f	typeref:typename:int
main	add_file_line_numbers.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	add_two_numbers.c	/^int main()$/;"	f	typeref:typename:int
main	anagram_checker.c	/^int main()$/;"	f	typeref:typename:int
main	append_input_to_file.c	/^int main()$/;"	f	typeref:typename:int
main	area_of_circle.c	/^int main(void) $/;"	f	typeref:typename:int
main	arithmetic.c	/^int main(void)$/;"	f	typeref:typename:int
main	armstrong_checker.c	/^int main(void)$/;"	f	typeref:typename:int
main	array_average.c	/^int main(void)$/;"	f	typeref:typename:int
main	array_basics.c	/^int main(void)$/;"	f	typeref:typename:int
main	array_concat.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	array_copy.c	/^int main(void)$/;"	f	typeref:typename:int
main	array_element_product.c	/^int main()$/;"	f	typeref:typename:int
main	array_includes.c	/^int main(void)$/;"	f	typeref:typename:int
main	array_index_trick.c	/^int main()$/;"	f	typeref:typename:int
main	array_of_structs_to_csv.c	/^int main(void)$/;"	f	typeref:typename:int
main	array_pass.c	/^int main(void)$/;"	f	typeref:typename:int
main	array_vs_&array.c	/^int main()$/;"	f	typeref:typename:int
main	arrow_operator.c	/^int main(void)$/;"	f	typeref:typename:int
main	assert.c	/^int main(void)$/;"	f	typeref:typename:int
main	assignment.c	/^int main(void)$/;"	f	typeref:typename:int
main	atexit.c	/^int main(void)$/;"	f	typeref:typename:int
main	basic_library/main.c	/^int main()$/;"	f	typeref:typename:int
main	binary/read_binary.c	/^int main()$/;"	f	typeref:typename:int
main	binary/read_text.c	/^int main()$/;"	f	typeref:typename:int
main	binary/write_binary.c	/^int main()$/;"	f	typeref:typename:int
main	binary_search.c	/^int main()$/;"	f	typeref:typename:int
main	binary_to_decimal.c	/^int main(void)$/;"	f	typeref:typename:int
main	bitwise_operators.c	/^int main() $/;"	f	typeref:typename:int
main	bool.c	/^int main(void) $/;"	f	typeref:typename:int
main	breakcontinue.c	/^int main(void)$/;"	f	typeref:typename:int
main	bubble_sort.c	/^int main(void)$/;"	f	typeref:typename:int
main	char_array_vs_string_literal_pointer.c	/^int main()$/;"	f	typeref:typename:int
main	char_bug.c	/^int main()$/;"	f	typeref:typename:int
main	check_char_in_string.c	/^int main(void)$/;"	f	typeref:typename:int
main	check_if_all_chars_unique.c	/^int main(void)$/;"	f	typeref:typename:int
main	check_if_array_sorted.c	/^int main()$/;"	f	typeref:typename:int
main	check_parity.c	/^int main(void)$/;"	f	typeref:typename:int
main	check_string_equality_recursive.c	/^int main(void)$/;"	f	typeref:typename:int
main	check_substring.c	/^int main(void)$/;"	f	typeref:typename:int
main	christmas_tree.c	/^int main(void)$/;"	f	typeref:typename:int
main	circle_circumference.c	/^int main(void)$/;"	f	typeref:typename:int
main	clear_input_buffer.c	/^int main()$/;"	f	typeref:typename:int
main	clearerr.cpp	/^int main()$/;"	f	typeref:typename:int
main	cmdargs.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	coin_toss.c	/^int main()$/;"	f	typeref:typename:int
main	col_sum_avg_2darray.c	/^int main()$/;"	f	typeref:typename:int
main	comma_operator.c	/^int main(void)$/;"	f	typeref:typename:int
main	comments.c	/^int main(void)$/;"	f	typeref:typename:int
main	const_pointer_vs_pointer_to_const.c	/^int main()$/;"	f	typeref:typename:int
main	constants.c	/^int main(void)$/;"	f	typeref:typename:int
main	convert_for_to_while.c	/^int main()$/;"	f	typeref:typename:int
main	convert_string.c	/^int main(void)$/;"	f	typeref:typename:int
main	convert_vowels_uppercase.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	copy_file.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	count_char.c	/^int main()$/;"	f	typeref:typename:int
main	count_chars.c	/^int main()$/;"	f	typeref:typename:int
main	count_chars_recursion.c	/^int main(void)$/;"	f	typeref:typename:int
main	count_digit_frequency.c	/^int main(void)$/;"	f	typeref:typename:int
main	count_digits.c	/^int main()$/;"	f	typeref:typename:int
main	count_digits_integer.c	/^int main(void)$/;"	f	typeref:typename:int
main	count_file_chars.c	/^int main()$/;"	f	typeref:typename:int
main	count_file_lines.c	/^int main()$/;"	f	typeref:typename:int
main	count_file_words_and_chars.c	/^int main()$/;"	f	typeref:typename:int
main	count_integer_digits.c	/^int main(void)$/;"	f	typeref:typename:int
main	count_letters.c	/^int main()$/;"	f	typeref:typename:int
main	count_lowercase.c	/^int main(void)$/;"	f	typeref:typename:int
main	count_nonrepeating.c	/^int main(void) $/;"	f	typeref:typename:int
main	count_occurrences.c	/^int main(void)$/;"	f	typeref:typename:int
main	count_punct.c	/^int main()$/;"	f	typeref:typename:int
main	count_spaces.c	/^int main(void)$/;"	f	typeref:typename:int
main	count_unique.c	/^int main()$/;"	f	typeref:typename:int
main	count_uppercase_letters.c	/^int main(void)$/;"	f	typeref:typename:int
main	count_vowels_recursion.c	/^int main(void)$/;"	f	typeref:typename:int
main	count_whitespace.c	/^int main(void)$/;"	f	typeref:typename:int
main	count_words.c	/^int main()$/;"	f	typeref:typename:int
main	countdown_timer.c	/^int main(void)$/;"	f	typeref:typename:int
main	csv_to_struct_array.c	/^int main(void)$/;"	f	typeref:typename:int
main	ctype.c	/^int main(void)$/;"	f	typeref:typename:int
main	cylinder_volume.c	/^int main(void)$/;"	f	typeref:typename:int
main	dangling_pointers.c	/^int main(void)$/;"	f	typeref:typename:int
main	decimal_to_binary.c	/^int main()$/;"	f	typeref:typename:int
main	declare_multiple_pointers.c	/^int main()$/;"	f	typeref:typename:int
main	delete_array_element.c	/^int main()$/;"	f	typeref:typename:int
main	delete_elements_user_input.c	/^int main()$/;"	f	typeref:typename:int
main	delete_line.c	/^int main()$/;"	f	typeref:typename:int
main	delete_lines_containing_chars.c	/^int main()$/;"	f	typeref:typename:int
main	delete_matching_lines.c	/^int main()$/;"	f	typeref:typename:int
main	delete_substring.c	/^int main()$/;"	f	typeref:typename:int
main	designated_initializers.c	/^int main(void)$/;"	f	typeref:typename:int
main	detached_threads.c	/^int main()$/;"	f	typeref:typename:int
main	dice_roll.c	/^int main(void)$/;"	f	typeref:typename:int
main	direct_vs_indirect_recursion.c	/^int main()$/;"	f	typeref:typename:int
main	disjoint_arrays.c	/^int main(void) $/;"	f	typeref:typename:int
main	display_file_contents.c	/^int main()$/;"	f	typeref:typename:int
main	distconvert.c	/^int main()$/;"	f	typeref:typename:int
main	div.c	/^int main(void) $/;"	f	typeref:typename:int
main	do_while_0_macro_pattern.c	/^int main(void)$/;"	f	typeref:typename:int
main	dot_product.c	/^int main(void)$/;"	f	typeref:typename:int
main	dowhile.c	/^int main(void)$/;"	f	typeref:typename:int
main	dynamic_2d_array.c	/^int main()$/;"	f	typeref:typename:int
main	dynamic_array_of_strings.c	/^int main()$/;"	f	typeref:typename:int
main	dynamic_array_of_structs.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	dynamic_string_truncate.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	dynamicmem.c	/^int main(void)$/;"	f	typeref:typename:int
main	elems_closest_to_zero.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	endswith.c	/^int main()$/;"	f	typeref:typename:int
main	enum.c	/^int main(void)$/;"	f	typeref:typename:int
main	errno.c	/^int main(void) $/;"	f	typeref:typename:int
main	error.c	/^int main()$/;"	f	typeref:typename:int
main	exit.c	/^int main(void)$/;"	f	typeref:typename:int
main	extern_share_global_variable/main.c	/^int main()$/;"	f	typeref:typename:int
main	f_vs_lf.c	/^int main()$/;"	f	typeref:typename:int
main	factorial_loop.c	/^int main(void)$/;"	f	typeref:typename:int
main	factorial_recursion.c	/^int main(void)$/;"	f	typeref:typename:int
main	feof.c	/^int main(void) $/;"	f	typeref:typename:int
main	fib.c	/^int main(void)$/;"	f	typeref:typename:int
main	file_lines_to_string_array.c	/^int main(void)$/;"	f	typeref:typename:int
main	file_number_average.c	/^int main()$/;"	f	typeref:typename:int
main	file_to_dynamic_string_optimized.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	file_to_dynamic_string_suboptimal.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	fileio.c	/^int main(void)$/;"	f	typeref:typename:int
main	files_lines_to_dynamic_array.c	/^int main(void)$/;"	f	typeref:typename:int
main	fill_2d_random.c	/^int main(void)$/;"	f	typeref:typename:int
main	fill_random.c	/^int main(void)$/;"	f	typeref:typename:int
main	fill_random_unique.c	/^int main(void)$/;"	f	typeref:typename:int
main	find_array_length.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	find_array_max_recursive.c	/^int main()$/;"	f	typeref:typename:int
main	find_factors.c	/^int main(void)$/;"	f	typeref:typename:int
main	find_first_char_occurrence.c	/^int main()$/;"	f	typeref:typename:int
main	find_first_nonrepeating_array_element.c	/^int main(void)$/;"	f	typeref:typename:int
main	find_group_averages.c	/^int main()$/;"	f	typeref:typename:int
main	find_k_sorted_array.c	/^int main(void)$/;"	f	typeref:typename:int
main	find_last_char_occurrence.c	/^int main()$/;"	f	typeref:typename:int
main	find_max.c	/^int main(void)$/;"	f	typeref:typename:int
main	find_max_file_value.c	/^int main()$/;"	f	typeref:typename:int
main	find_min.c	/^int main(void)$/;"	f	typeref:typename:int
main	find_min_recursive.c	/^int main()$/;"	f	typeref:typename:int
main	fizzbuzz.c	/^int main()$/;"	f	typeref:typename:int
main	floating_point_classification.c	/^int main(void)$/;"	f	typeref:typename:int
main	fmod.c	/^int main(void) $/;"	f	typeref:typename:int
main	for.c	/^int main(void)$/;"	f	typeref:typename:int
main	fprintf.c	/^int main(void)$/;"	f	typeref:typename:int
main	fputs.c	/^int main(void)$/;"	f	typeref:typename:int
main	fseek.c	/^int main(void)$/;"	f	typeref:typename:int
main	function_like_macros.c	/^int main()$/;"	f	typeref:typename:int
main	function_pointers.c	/^int main()$/;"	f	typeref:typename:int
main	function_vs_&function.c	/^int main()$/;"	f	typeref:typename:int
main	functions.c	/^int main(void)$/;"	f	typeref:typename:int
main	generate_random_character.c	/^int main(void)$/;"	f	typeref:typename:int
main	generate_random_string.c	/^int main(void)$/;"	f	typeref:typename:int
main	getenv.c	/^int main()$/;"	f	typeref:typename:int
main	gets.c	/^int main()$/;"	f	typeref:typename:int
main	goto.c	/^int main()$/;"	f	typeref:typename:int
main	guessing_game.c	/^int main()$/;"	f	typeref:typename:int
main	head_vs_tail_recursion.c	/^int main(void)$/;"	f	typeref:typename:int
main	heap_inspection.c	/^int main(void)$/;"	f	typeref:typename:int
main	hello_world.c	/^int main(void)$/;"	f	typeref:typename:int
main	if.c	/^int main(void)$/;"	f	typeref:typename:int
main	if_0_technique.c	/^int main(void)$/;"	f	typeref:typename:int
main	if_elif_else.c	/^int main()$/;"	f	typeref:typename:int
main	if_statement_best_practice.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	ifdef_ifndef.c	/^int main()$/;"	f	typeref:typename:int
main	inches_to_feet_and_inches.c	/^int main(void)$/;"	f	typeref:typename:int
main	include_guards/main.c	/^int main(void)$/;"	f	typeref:typename:int
main	increase_size_dynamic_2d_array.c	/^int main()$/;"	f	typeref:typename:int
main	infinite_buffer.c	/^int main(void)$/;"	f	typeref:typename:int
main	infinite_number_user_input_buffer.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	init_2darray_user_input.c	/^int main(void)$/;"	f	typeref:typename:int
main	init_array_include.c	/^int main()$/;"	f	typeref:typename:int
main	init_array_user_input.c	/^int main()$/;"	f	typeref:typename:int
main	initialize_string_array_with_user_input.c	/^int main(void)$/;"	f	typeref:typename:int
main	input_validation.c	/^int main()$/;"	f	typeref:typename:int
main	insert_array_value.c	/^int main()$/;"	f	typeref:typename:int
main	insertion_sort.c	/^int main()$/;"	f	typeref:typename:int
main	int_main_void_difference.c	/^int main(void)$/;"	f	typeref:typename:int
main	integer_input.c	/^int main(void)$/;"	f	typeref:typename:int
main	interlace_switch_cases_control_structures.c	/^int main()$/;"	f	typeref:typename:int
main	is_leap_year.c	/^int main(void)$/;"	f	typeref:typename:int
main	is_prime.c	/^int main(void)$/;"	f	typeref:typename:int
main	is_rotation.c	/^int main()$/;"	f	typeref:typename:int
main	isalnum.c	/^int main(void)$/;"	f	typeref:typename:int
main	isalpha.c	/^int main(void)$/;"	f	typeref:typename:int
main	iscntrl.c	/^int main(void)$/;"	f	typeref:typename:int
main	isdigit.c	/^int main(void)$/;"	f	typeref:typename:int
main	isgraph.c	/^int main(void)$/;"	f	typeref:typename:int
main	isprint.c	/^int main(void)$/;"	f	typeref:typename:int
main	ispunct.c	/^int main(void)$/;"	f	typeref:typename:int
main	isspace.c	/^int main(void)$/;"	f	typeref:typename:int
main	iterate_over_string_without_strlen.c	/^int main(void)$/;"	f	typeref:typename:int
main	iterate_string_pointer.c	/^int main(void)$/;"	f	typeref:typename:int
main	join.c	/^int main()$/;"	f	typeref:typename:int
main	largest_word.c	/^int main()$/;"	f	typeref:typename:int
main	largest_word_print.c	/^int main()$/;"	f	typeref:typename:int
main	letter_flip.c	/^int main(void)$/;"	f	typeref:typename:int
main	letter_frequency.c	/^int main(void)$/;"	f	typeref:typename:int
main	libcurl_examples/libcurl_intro.c	/^int main(void)$/;"	f	typeref:typename:int
main	libcurl_examples/query_parameters.c	/^int main(void)$/;"	f	typeref:typename:int
main	libcurl_examples/store_http_response_into_string.c	/^int main(void)$/;"	f	typeref:typename:int
main	line_directive.c	/^int main(void)$/;"	f	typeref:typename:int
main	list_dir_contents.c	/^int main(void)$/;"	f	typeref:typename:int
main	litres_of_paint.c	/^int main()$/;"	f	typeref:typename:int
main	local_vs_global_variables.c	/^int main(void)$/;"	f	typeref:typename:int
main	logical_operator.c	/^int main(void)$/;"	f	typeref:typename:int
main	lottery_numbers.c	/^int main()$/;"	f	typeref:typename:int
main	lvalues_ravlues.c	/^int main()$/;"	f	typeref:typename:int
main	magic_8ball.c	/^int main()$/;"	f	typeref:typename:int
main	main_return.c	/^int main(void)$/;"	f	typeref:typename:int
main	make_lower.c	/^int main()$/;"	f	typeref:typename:int
main	make_upper.c	/^int main()$/;"	f	typeref:typename:int
main	malloc_vs_calloc.c	/^int main(void)$/;"	f	typeref:typename:int
main	matrix_addition.c	/^int main(void)$/;"	f	typeref:typename:int
main	matrix_equality.c	/^int main(void)$/;"	f	typeref:typename:int
main	matrix_multiplication.c	/^int main(void)$/;"	f	typeref:typename:int
main	matrix_subtraction.c	/^int main(void)$/;"	f	typeref:typename:int
main	matrix_transpose.c	/^int main(void)$/;"	f	typeref:typename:int
main	max_occur_char.c	/^int main()$/;"	f	typeref:typename:int
main	measure_execution_time.c	/^int main(void)$/;"	f	typeref:typename:int
main	memccpy.c	/^int main(void)$/;"	f	typeref:typename:int
main	memchr.c	/^int main(void)$/;"	f	typeref:typename:int
main	memcpy.c	/^int main(void) $/;"	f	typeref:typename:int
main	memmove.c	/^int main()$/;"	f	typeref:typename:int
main	memory_leaks.c	/^int main()$/;"	f	typeref:typename:int
main	memset.c	/^int main(void) $/;"	f	typeref:typename:int
main	merge_files.c	/^int main()$/;"	f	typeref:typename:int
main	merge_sort.c	/^int main()$/;"	f	typeref:typename:int
main	merge_sorted_arrays.c	/^int main(void) $/;"	f	typeref:typename:int
main	merge_sorted_arrays_recursively.c	/^int main(void)$/;"	f	typeref:typename:int
main	middle_index.c	/^int main()$/;"	f	typeref:typename:int
main	min_distance_two_numbers.c	/^int main()$/;"	f	typeref:typename:int
main	min_occur_char.c	/^int main()$/;"	f	typeref:typename:int
main	mkdir.c	/^int main(void)$/;"	f	typeref:typename:int
main	modf.c	/^int main(void) $/;"	f	typeref:typename:int
main	most_frequent_array_value.c	/^int main(void)$/;"	f	typeref:typename:int
main	move_zeros.c	/^int main(void)$/;"	f	typeref:typename:int
main	multiline_string_literal.c	/^int main(void)$/;"	f	typeref:typename:int
main	multiplication_table.c	/^int main(void)$/;"	f	typeref:typename:int
main	mutex/main.c	/^int main()$/;"	f	typeref:typename:int
main	nested_functions.c	/^int main()$/;"	f	typeref:typename:int
main	null_pointer.c	/^int main(void)$/;"	f	typeref:typename:int
main	null_terminator.c	/^int main(void)$/;"	f	typeref:typename:int
main	ouput_row_2D_array.c	/^int main(void)$/;"	f	typeref:typename:int
main	output_col_2D_array.c	/^int main(void)$/;"	f	typeref:typename:int
main	output_percent_char.c	/^int main(void)$/;"	f	typeref:typename:int
main	own_memcpy.c	/^int main()$/;"	f	typeref:typename:int
main	own_strcat.c	/^int main()$/;"	f	typeref:typename:int
main	own_strchr.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	own_strspn.c	/^int main()$/;"	f	typeref:typename:int
main	own_tolower.c	/^int main()$/;"	f	typeref:typename:int
main	palindrome.c	/^int main(void)$/;"	f	typeref:typename:int
main	palindrome_recursion.c	/^int main()$/;"	f	typeref:typename:int
main	parameters_vs_arguments.c	/^int main()$/;"	f	typeref:typename:int
main	pass_by_reference.c	/^int main(void)$/;"	f	typeref:typename:int
main	pointer_notation.c	/^int main(void) $/;"	f	typeref:typename:int
main	pointers.c	/^int main(void)$/;"	f	typeref:typename:int
main	postal_code.c	/^int main()$/;"	f	typeref:typename:int
main	pow.c	/^int main(void) $/;"	f	typeref:typename:int
main	predefined_macros.c	/^int main()$/;"	f	typeref:typename:int
main	prevspost.c	/^int main(void)$/;"	f	typeref:typename:int
main	prime_check_recursion.c	/^int main(void)$/;"	f	typeref:typename:int
main	print_0_99_grid.c	/^int main(void)$/;"	f	typeref:typename:int
main	print_2d_array.c	/^int main()$/;"	f	typeref:typename:int
main	print_a_heart.c	/^int main(void)$/;"	f	typeref:typename:int
main	print_array.c	/^int main()$/;"	f	typeref:typename:int
main	print_debugging.c	/^int main()$/;"	f	typeref:typename:int
main	print_first_letter.c	/^int main(void)$/;"	f	typeref:typename:int
main	print_first_repeat.c	/^int main()$/;"	f	typeref:typename:int
main	print_first_unique.c	/^int main()$/;"	f	typeref:typename:int
main	print_last_letter.c	/^int main(void)$/;"	f	typeref:typename:int
main	print_reverse.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	print_reverse_recursive.c	/^int main()$/;"	f	typeref:typename:int
main	print_string_recursion.c	/^int main(void)$/;"	f	typeref:typename:int
main	print_unique.c	/^int main()$/;"	f	typeref:typename:int
main	print_until_newline.c	/^int main()$/;"	f	typeref:typename:int
main	printf.c	/^int main(void)$/;"	f	typeref:typename:int
main	prints_itself.c	/^int main(void)$/;"	f	typeref:typename:int
main	puts.c	/^int main(void)$/;"	f	typeref:typename:int
main	qsort.c	/^int main()$/;"	f	typeref:typename:int
main	queue_linked_list.c	/^int main(void)$/;"	f	typeref:typename:int
main	quicksort.c	/^int main()$/;"	f	typeref:typename:int
main	quiz_game.c	/^int main(void)$/;"	f	typeref:typename:int
main	race_condition_example/main.c	/^int main()$/;"	f	typeref:typename:int
main	random.c	/^int main(void) $/;"	f	typeref:typename:int
main	random_bool.c	/^int main(void)$/;"	f	typeref:typename:int
main	random_double.c	/^int main(void)$/;"	f	typeref:typename:int
main	random_password_generator.c	/^int main()$/;"	f	typeref:typename:int
main	read_file.c	/^int main()$/;"	f	typeref:typename:int
main	read_line.c	/^int main()$/;"	f	typeref:typename:int
main	readfile_into_2d_array.c	/^int main(void)$/;"	f	typeref:typename:int
main	realloc.c	/^int main(void)$/;"	f	typeref:typename:int
main	realloc_fail.c	/^int main(void)$/;"	f	typeref:typename:int
main	realloc_vulnerability.c	/^int main(void)$/;"	f	typeref:typename:int
main	rectangle_area.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	rectangle_perimeter.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	recursion.c	/^int main(void)$/;"	f	typeref:typename:int
main	recursive_array_average.c	/^int main(void)$/;"	f	typeref:typename:int
main	register.c	/^int main()$/;"	f	typeref:typename:int
main	relational.c	/^int main(void)$/;"	f	typeref:typename:int
main	remove.c	/^int main()$/;"	f	typeref:typename:int
main	remove_char.c	/^int main(void)$/;"	f	typeref:typename:int
main	remove_char_from_file.c	/^int main(void)$/;"	f	typeref:typename:int
main	remove_chars_from_string.c	/^int main(void)$/;"	f	typeref:typename:int
main	remove_chat_at_pos.c	/^int main()$/;"	f	typeref:typename:int
main	remove_consecutive_spaces.c	/^int main(void)$/;"	f	typeref:typename:int
main	remove_duplicate_chars.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	remove_duplicates.c	/^int main()$/;"	f	typeref:typename:int
main	remove_duplicates_efficient.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	remove_fgets_trailing_newline.c	/^int main()$/;"	f	typeref:typename:int
main	remove_non_alpha.c	/^int main(void)$/;"	f	typeref:typename:int
main	remove_space_chars.c	/^int main(void)$/;"	f	typeref:typename:int
main	remove_vowels.c	/^int main(void) $/;"	f	typeref:typename:int
main	rename.c	/^int main()$/;"	f	typeref:typename:int
main	repeat_a_string.c	/^int main(void)$/;"	f	typeref:typename:int
main	replace_char.c	/^int main(void)$/;"	f	typeref:typename:int
main	replace_line.c	/^int main()$/;"	f	typeref:typename:int
main	replace_occurrences.c	/^int main(void)$/;"	f	typeref:typename:int
main	replace_substring.c	/^int main()$/;"	f	typeref:typename:int
main	return_a_string.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	return_an_array.c	/^int main()$/;"	f	typeref:typename:int
main	return_dynamic_2d_array.c	/^int main(void)$/;"	f	typeref:typename:int
main	return_more_than_one.c	/^int main()$/;"	f	typeref:typename:int
main	return_multiple_dynamic.c	/^int main(void)$/;"	f	typeref:typename:int
main	reverse.c	/^int main(void)$/;"	f	typeref:typename:int
main	reverse_a_file.c	/^int main()$/;"	f	typeref:typename:int
main	reverse_a_string.c	/^int main(void)$/;"	f	typeref:typename:int
main	reverse_array_recursive.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	reverse_integer.c	/^int main(void)$/;"	f	typeref:typename:int
main	reverse_string_using_pointers.c	/^int main(void)$/;"	f	typeref:typename:int
main	reverse_words.c	/^int main() $/;"	f	typeref:typename:int
main	rewind.c	/^int main()$/;"	f	typeref:typename:int
main	rock_paper_scissors.c	/^int main()$/;"	f	typeref:typename:int
main	rotate_array_left.c	/^int main(void) $/;"	f	typeref:typename:int
main	rotate_array_right.c	/^int main(void) $/;"	f	typeref:typename:int
main	round_double.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	round_functions.c	/^int main(void) $/;"	f	typeref:typename:int
main	row_sum_avg_2darray.c	/^int main()$/;"	f	typeref:typename:int
main	savings_calculator.c	/^int main(void)$/;"	f	typeref:typename:int
main	scanf.c	/^int main(void)$/;"	f	typeref:typename:int
main	second_highest.c	/^int main()$/;"	f	typeref:typename:int
main	second_lowest.c	/^int main()$/;"	f	typeref:typename:int
main	seed.c	/^int main()$/;"	f	typeref:typename:int
main	selection_sort.c	/^int main()$/;"	f	typeref:typename:int
main	set_random_2d_array_indexes.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	sets.c	/^int main()$/;"	f	typeref:typename:int
main	shuffle_2darray.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	shuffle_a_string.c	/^int main(void)$/;"	f	typeref:typename:int
main	shuffle_array.c	/^int main(void)$/;"	f	typeref:typename:int
main	simple_calculator.c	/^int main(void)$/;"	f	typeref:typename:int
main	single_vs_multiple_recursion.c	/^int main()$/;"	f	typeref:typename:int
main	size_t.c	/^int main()$/;"	f	typeref:typename:int
main	sizeof.c	/^int main()$/;"	f	typeref:typename:int
main	sleep.c	/^int main(void) $/;"	f	typeref:typename:int
main	smallest_word.c	/^int main()$/;"	f	typeref:typename:int
main	smallest_word_print.c	/^int main()$/;"	f	typeref:typename:int
main	sort_three_numbers.c	/^int main()$/;"	f	typeref:typename:int
main	sorting_strings.c	/^int main()$/;"	f	typeref:typename:int
main	split.c	/^int main()$/;"	f	typeref:typename:int
main	split_array_at_index.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	split_even_odd.c	/^int main(void)$/;"	f	typeref:typename:int
main	split_string.c	/^int main()$/;"	f	typeref:typename:int
main	sprintf.c	/^int main()$/;"	f	typeref:typename:int
main	sqrt.c	/^int main()$/;"	f	typeref:typename:int
main	square_area.c	/^int main()$/;"	f	typeref:typename:int
main	stack.c	/^int main(void)$/;"	f	typeref:typename:int
main	stack_overflow.c	/^int main(void)$/;"	f	typeref:typename:int
main	startswith.c	/^int main()$/;"	f	typeref:typename:int
main	static_functions/main.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	static_global_variable/main.c	/^int main()$/;"	f	typeref:typename:int
main	static_local_variables.c	/^int main()$/;"	f	typeref:typename:int
main	stdarg_demo.c	/^int main(void) $/;"	f	typeref:typename:int
main	stderr.c	/^int main(void)$/;"	f	typeref:typename:int
main	stdev.c	/^int main()$/;"	f	typeref:typename:int
main	strcat_strncat.c	/^int main(void) $/;"	f	typeref:typename:int
main	strchr.c	/^int main(void) $/;"	f	typeref:typename:int
main	strcmp.c	/^int main(void) $/;"	f	typeref:typename:int
main	strcpy_strncpy.c	/^int main()$/;"	f	typeref:typename:int
main	strcspn.c	/^int main(void) $/;"	f	typeref:typename:int
main	string_append.c	/^int main(void)$/;"	f	typeref:typename:int
main	string_basics.c	/^int main(void)$/;"	f	typeref:typename:int
main	string_input.c	/^int main(void)$/;"	f	typeref:typename:int
main	string_length.c	/^int main(void) $/;"	f	typeref:typename:int
main	string_length_recursive.c	/^int main(void)$/;"	f	typeref:typename:int
main	string_safety.c	/^int main(void)$/;"	f	typeref:typename:int
main	string_truncate.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	strncpy_implementation.c	/^int main()$/;"	f	typeref:typename:int
main	strnlen.c	/^int main(void)$/;"	f	typeref:typename:int
main	strpbrk.c	/^int main(void) $/;"	f	typeref:typename:int
main	strpbrk_implementation.c	/^int main()$/;"	f	typeref:typename:int
main	strrchr.c	/^int main(void) $/;"	f	typeref:typename:int
main	strspn.c	/^int main(void) $/;"	f	typeref:typename:int
main	strstr.c	/^int main(void) $/;"	f	typeref:typename:int
main	strtod.c	/^int main(void)$/;"	f	typeref:typename:int
main	strtok.c	/^int main(void) $/;"	f	typeref:typename:int
main	struct.c	/^int main(void)$/;"	f	typeref:typename:int
main	struct_array_binary_file.c	/^int main()$/;"	f	typeref:typename:int
main	structure_padding.c	/^int main(void)$/;"	f	typeref:typename:int
main	substring.c	/^int main()$/;"	f	typeref:typename:int
main	sum.c	/^int main(void)$/;"	f	typeref:typename:int
main	sum_digits.c	/^int main()$/;"	f	typeref:typename:int
main	sum_naturals.c	/^int main() $/;"	f	typeref:typename:int
main	sum_string_digits.c	/^int main(void)$/;"	f	typeref:typename:int
main	swap_cols.c	/^int main(void)$/;"	f	typeref:typename:int
main	swap_rows.c	/^int main(void)$/;"	f	typeref:typename:int
main	switch.c	/^int main(void)$/;"	f	typeref:typename:int
main	switch_menu.c	/^int main()$/;"	f	typeref:typename:int
main	system.c	/^int main()$/;"	f	typeref:typename:int
main	temp_convert.c	/^int main(void)$/;"	f	typeref:typename:int
main	ternary.c	/^int main(void)$/;"	f	typeref:typename:int
main	third_angle.c	/^int main()$/;"	f	typeref:typename:int
main	thread_intro.c	/^int main()$/;"	f	typeref:typename:int
main	time.h	/^int main(void) $/;"	f	typeref:typename:int
main	time_null.c	/^int main(void)$/;"	f	typeref:typename:int
main	tmpfile.c	/^int main(void)$/;"	f	typeref:typename:int
main	tmpnam.c	/^int main(void)$/;"	f	typeref:typename:int
main	token_pasting_operator.c	/^int main()$/;"	f	typeref:typename:int
main	tolower.c	/^int main(void)$/;"	f	typeref:typename:int
main	triangle_area.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	triangle_of_stars.c	/^int main(void) $/;"	f	typeref:typename:int
main	trim_leading_whitespace.c	/^int main() $/;"	f	typeref:typename:int
main	trim_trailing_whitespace.c	/^int main() $/;"	f	typeref:typename:int
main	truncate.c	/^int main(void)$/;"	f	typeref:typename:int
main	twod_array.c	/^int main(void)$/;"	f	typeref:typename:int
main	typecast.c	/^int main(void)$/;"	f	typeref:typename:int
main	typedef.c	/^int main(void)$/;"	f	typeref:typename:int
main	ungetc.c	/^int main(void)$/;"	f	typeref:typename:int
main	unions.c	/^int main()$/;"	f	typeref:typename:int
main	variable_scope.c	/^int main(void)$/;"	f	typeref:typename:int
main	variables.c	/^int main(void)$/;"	f	typeref:typename:int
main	vector_add.c	/^int main(void)$/;"	f	typeref:typename:int
main	verify_password.c	/^int main()$/;"	f	typeref:typename:int
main	void_function_return.c	/^int main(void)$/;"	f	typeref:typename:int
main	void_main.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	void_pointers.c	/^int main()$/;"	f	typeref:typename:int
main	volume_of_a_sphere.c	/^int main(void)$/;"	f	typeref:typename:int
main	vowel_counter.c	/^int main(void)$/;"	f	typeref:typename:int
main	while.c	/^int main(void)$/;"	f	typeref:typename:int
main	word_count.c	/^int main(void)$/;"	f	typeref:typename:int
main	word_scramble_game.c	/^int main()$/;"	f	typeref:typename:int
main	write_input_to_file.c	/^int main()$/;"	f	typeref:typename:int
main	write_specific.c	/^int main()$/;"	f	typeref:typename:int
main	xor_swap.c	/^int main()$/;"	f	typeref:typename:int
main	your_own_strcpy.c	/^int main()$/;"	f	typeref:typename:int
make_array	sizeof.c	/^void make_array(int length)$/;"	f	typeref:typename:void
make_lower	make_lower.c	/^void make_lower(char *s)$/;"	f	typeref:typename:void
make_upper	make_upper.c	/^void make_upper(char *s)$/;"	f	typeref:typename:void
matrix_addition	matrix_addition.c	/^void matrix_addition(int A[ROWS][COLS], int B[ROWS][COLS], int C[ROWS][COLS])$/;"	f	typeref:typename:void
matrix_equality	matrix_equality.c	/^bool matrix_equality(int A[ROWS][COLS], int B[ROWS][COLS])$/;"	f	typeref:typename:bool
matrix_mult	matrix_multiplication.c	/^void matrix_mult(int A[M][N], int B[N][P], int C[M][P])$/;"	f	typeref:typename:void
matrix_mult	twod_array.c	/^void matrix_mult(int c[M][P], int a[M][N], int b[N][P])$/;"	f	typeref:typename:void
matrix_subtraction	matrix_subtraction.c	/^void matrix_subtraction(int A[ROWS][COLS],$/;"	f	typeref:typename:void
max	find_array_max_recursive.c	/^int max(int array[], int n)$/;"	f	typeref:typename:int
max	stdarg_demo.c	/^int max(int num_args, ...)$/;"	f	typeref:typename:int
max_rectangle_area	nested_functions.c	/^int max_rectangle_area(int width1, int length1, int width2, int length2)$/;"	f	typeref:typename:int
mem_cpy	own_memcpy.c	/^void *mem_cpy(void *dest, void *src, int n)$/;"	f	typeref:typename:void *
members	sets.c	/^  int *members;    \/\/ pointer to dynamically allocated array of the set members$/;"	m	struct:__anon1b857b750108	typeref:typename:int *	file:
memory_hog	dynamicmem.c	/^void memory_hog(int size)$/;"	f	typeref:typename:void
merge	merge_sorted_arrays.c	/^void merge(int a[], int m, int b[], int n, int r[])$/;"	f	typeref:typename:void
merge	merge_sorted_arrays_recursively.c	/^void merge(int a[], int i, int b[], int j, int r[])$/;"	f	typeref:typename:void
merge_sort	merge_sort.c	/^void merge_sort(int a[], int length)$/;"	f	typeref:typename:void
merge_sort_recursion	merge_sort.c	/^void merge_sort_recursion(int a[], int l, int r)$/;"	f	typeref:typename:void
merge_sorted_arrays	merge_sort.c	/^void merge_sorted_arrays(int a[], int l, int m, int r)$/;"	f	typeref:typename:void
method1	return_a_string.c	/^const char *method1()$/;"	f	typeref:typename:const char *
method2	return_a_string.c	/^char *method2()$/;"	f	typeref:typename:char *
method3	return_a_string.c	/^void method3(char *s)$/;"	f	typeref:typename:void
method4	return_a_string.c	/^char *method4()$/;"	f	typeref:typename:char *
min	find_min_recursive.c	/^int min(int array[], int n)$/;"	f	typeref:typename:int
min	function_like_macros.c	/^#define min(/;"	d	file:
min_distance	min_distance_two_numbers.c	/^int min_distance(int array[], int length, int a, int b)$/;"	f	typeref:typename:int
mult	functions.c	/^int mult(int x, int y)$/;"	f	typeref:typename:int
multiply	function_pointers.c	/^int multiply(int x, int y) { return x * y; }$/;"	f	typeref:typename:int
mutex	mutex/main.c	/^pthread_mutex_t mutex;$/;"	v	typeref:typename:pthread_mutex_t
name	array_of_structs_to_csv.c	/^  char name[50];$/;"	m	struct:__anonb044834d0108	typeref:typename:char[50]	file:
name	csv_to_struct_array.c	/^  char name[50];$/;"	m	struct:__anon4fd7ece60108	typeref:typename:char[50]	file:
name	include_guards/course.h	/^  char name[100];$/;"	m	struct:__anon228106040108	typeref:typename:char[100]
name	include_guards/student.h	/^  char name[100];$/;"	m	struct:__anon3612813a0108	typeref:typename:char[100]
name	own_memcpy.c	/^  char name[256];$/;"	m	struct:__anon833ba4340108	typeref:typename:char[256]	file:
name	struct.c	/^  char name[50];$/;"	m	struct:__anon9112fa7b0108	typeref:typename:char[50]	file:
name	struct_array_binary_file.c	/^  char name[256];$/;"	m	struct:__anon85ca999c0108	typeref:typename:char[256]	file:
name	token_pasting_operator.c	/^  char name[100];$/;"	m	struct:__anon2b75dcd70108	typeref:typename:char[100]	file:
next	null_pointer.c	/^  struct node *next;$/;"	m	struct:node	typeref:struct:node *	file:
next	queue_linked_list.c	/^  struct Node *next;$/;"	m	struct:Node	typeref:struct:Node *	file:
node	null_pointer.c	/^struct node$/;"	s	file:
non_repeating	count_nonrepeating.c	/^int non_repeating(int a[], int length)$/;"	f	typeref:typename:int
number	extern_share_global_variable/library.c	/^int number = 0;$/;"	v	typeref:typename:int
number	function_like_macros.c	/^int number = 0;$/;"	v	typeref:typename:int
number	static_global_variable/library.c	/^static int number = 0;$/;"	v	typeref:typename:int	file:
occurrences	count_occurrences.c	/^int occurrences(int array[], int length, int to_find)$/;"	f	typeref:typename:int
outer	nested_functions.c	/^void outer()$/;"	f	typeref:typename:void
output	function_like_macros.c	/^#define output(/;"	d	file:
parse_int	integer_input.c	/^bool parse_int(char *string, int *integer)$/;"	f	typeref:typename:bool
partition	quicksort.c	/^int partition(int array[], int low, int high)$/;"	f	typeref:typename:int
peek	queue_linked_list.c	/^int peek(Queue *queue, bool *status)$/;"	f	typeref:typename:int
peek	stack.c	/^bool peek(Stack *stack, int *item)$/;"	f	typeref:typename:bool
pop	stack.c	/^bool pop(Stack *stack, int *item)$/;"	f	typeref:typename:bool
press	enum.c	/^Button press(Button current)$/;"	f	typeref:typename:Button
primeChecker	prime_check_recursion.c	/^bool primeChecker(int n, int i)$/;"	f	typeref:typename:bool
primeChecker2	prime_check_recursion.c	/^bool primeChecker2(int n, int stop, int i)$/;"	f	typeref:typename:bool
print	extern_share_global_variable/library.c	/^void print()$/;"	f	typeref:typename:void
print	function_like_macros.c	/^#define print /;"	d	file:
print	pointer_notation.c	/^void print(int *a)$/;"	f	typeref:typename:void
print	shuffle_2darray.c	/^void print(int array[ROWS][COLS])$/;"	f	typeref:typename:void
print	static_functions/lib.c	/^static void print(double value, int times)$/;"	f	typeref:typename:void	file:
print	static_global_variable/library.c	/^void print()$/;"	f	typeref:typename:void
print	stdarg_demo.c	/^void print(char *placeholders, ... )$/;"	f	typeref:typename:void
print	token_pasting_operator.c	/^#define print(/;"	d	file:
print2Darray	print_2d_array.c	/^void print2Darray(int array[ROWS][COLS])$/;"	f	typeref:typename:void
print_array	constants.c	/^void print_array(int *array, int size)$/;"	f	typeref:typename:void
print_array	void_function_return.c	/^void print_array(int array[], int length)$/;"	f	typeref:typename:void
print_button	enum.c	/^void print_button(Button current)$/;"	f	typeref:typename:void
print_chars	string_safety.c	/^void print_chars(char *string)$/;"	f	typeref:typename:void
print_chars_safe	string_safety.c	/^void print_chars_safe(char *string, size_t n)$/;"	f	typeref:typename:void
print_even	direct_vs_indirect_recursion.c	/^void print_even(int n)$/;"	f	typeref:typename:void
print_first_repeat	print_first_repeat.c	/^void print_first_repeat(char *s)$/;"	f	typeref:typename:void
print_first_unique	print_first_unique.c	/^void print_first_unique(char *s)$/;"	f	typeref:typename:void
print_int	functions.c	/^void print_int(int a)$/;"	f	typeref:typename:void
print_max_char	max_occur_char.c	/^void print_max_char(char *s)$/;"	f	typeref:typename:void
print_min_char	min_occur_char.c	/^void print_min_char(char *s)$/;"	f	typeref:typename:void
print_number_3x	function_like_macros.c	/^#define print_number_3x(/;"	d	file:
print_occurrences	count_chars.c	/^void print_occurrences(char *s)$/;"	f	typeref:typename:void
print_odd	direct_vs_indirect_recursion.c	/^void print_odd(int n)$/;"	f	typeref:typename:void
print_points	struct.c	/^void print_points(Point points[])$/;"	f	typeref:typename:void
print_reverse	print_reverse.c	/^void print_reverse(int array[], int length)$/;"	f	typeref:typename:void
print_reverse	print_reverse_recursive.c	/^void print_reverse(char *s)$/;"	f	typeref:typename:void
print_set	sets.c	/^void print_set(Set *set)$/;"	f	typeref:typename:void
print_size	find_array_length.c	/^void print_size(int array[])$/;"	f	typeref:typename:void
print_string	assert.c	/^void print_string(char *s)$/;"	f	typeref:typename:void
print_string	print_string_recursion.c	/^void print_string(char *string)$/;"	f	typeref:typename:void
print_student	struct.c	/^void print_student(Student student)$/;"	f	typeref:typename:void
print_unique	print_unique.c	/^void print_unique(int a[], int length)$/;"	f	typeref:typename:void
print_until_newline	print_until_newline.c	/^void print_until_newline(char *s)$/;"	f	typeref:typename:void
push	stack.c	/^bool push(Stack *stack, int item)$/;"	f	typeref:typename:bool
question	quiz_game.c	/^  char question[MAX_QUESTION];$/;"	m	struct:__anon88cc90d80108	typeref:typename:char[]	file:
quicksort	quicksort.c	/^void quicksort(int array[], int length)$/;"	f	typeref:typename:void
quicksort_recursion	quicksort.c	/^void quicksort_recursion(int array[], int low, int high)$/;"	f	typeref:typename:void
quiz_question	quiz_game.c	/^} quiz_question;$/;"	t	typeref:struct:__anon88cc90d80108	file:
rand_range	random_double.c	/^double rand_range(double min, double max)$/;"	f	typeref:typename:double
random_bool	random_bool.c	/^bool random_bool()$/;"	f	typeref:typename:bool
random_char1	generate_random_character.c	/^char random_char1()$/;"	f	typeref:typename:char
random_char2	generate_random_character.c	/^char random_char2()$/;"	f	typeref:typename:char
random_string1	generate_random_string.c	/^char *random_string1(size_t size, char *possible)$/;"	f	typeref:typename:char *
random_string2	generate_random_string.c	/^char *random_string2(size_t size)$/;"	f	typeref:typename:char *
read_balance	mutex/bank.c	/^int read_balance()$/;"	f	typeref:typename:int
read_balance	race_condition_example/bank.c	/^int read_balance()$/;"	f	typeref:typename:int
read_data	struct_array_binary_file.c	/^Student *read_data(char *filename, int *total)$/;"	f	typeref:typename:Student *
read_file	read_file.c	/^char *read_file(char *filename)$/;"	f	typeref:typename:char *
rect	return_more_than_one.c	/^void rect(int length, int width, int *area, int *perimeter)$/;"	f	typeref:typename:void
remove_char	remove_char.c	/^void remove_char(char *string, char r)$/;"	f	typeref:typename:void
remove_char	remove_chat_at_pos.c	/^bool remove_char(char *s, int pos)$/;"	f	typeref:typename:bool
remove_chars	remove_chars_from_string.c	/^int remove_chars(char string[], char remove[])$/;"	f	typeref:typename:int
remove_consecutive_spaces	remove_consecutive_spaces.c	/^void remove_consecutive_spaces(char *string)$/;"	f	typeref:typename:void
remove_duplicates	remove_duplicate_chars.c	/^void remove_duplicates(char *string)$/;"	f	typeref:typename:void
remove_duplicates	remove_duplicates.c	/^int *remove_duplicates(int array[], int length, int *new_length)$/;"	f	typeref:typename:int *
remove_duplicates	remove_duplicates_efficient.c	/^void remove_duplicates(char *string)$/;"	f	typeref:typename:void
remove_non_alpha	remove_non_alpha.c	/^void remove_non_alpha(char *string)$/;"	f	typeref:typename:void
remove_spaces	remove_space_chars.c	/^void remove_spaces(char *string)$/;"	f	typeref:typename:void
repeat	repeat_a_string.c	/^char *repeat(char *string, size_t repeats)$/;"	f	typeref:typename:char *
replace	replace_occurrences.c	/^void replace(int array[], int length, int value, int new)$/;"	f	typeref:typename:void
replace	replace_substring.c	/^char *replace(char *before, char *oldsub, char *newsub)$/;"	f	typeref:typename:char *
replace_char	replace_char.c	/^void replace_char(char *string, char replace, char new)$/;"	f	typeref:typename:void
report_value	static_functions/lib.c	/^void report_value(double value)$/;"	f	typeref:typename:void
return_two	return_multiple_dynamic.c	/^void return_two(int *a, int *b)$/;"	f	typeref:typename:void
reverse	reverse.c	/^void reverse(int array[], int length)$/;"	f	typeref:typename:void
reverse	reverse_a_string.c	/^void reverse(char *string)$/;"	f	typeref:typename:void
reverse	reverse_array_recursive.c	/^void reverse(int array[], int low, int high)$/;"	f	typeref:typename:void
reverse_array	reverse_array_recursive.c	/^void reverse_array(int array[], int length)$/;"	f	typeref:typename:void
reverse_string	reverse_string_using_pointers.c	/^void reverse_string(char *string)$/;"	f	typeref:typename:void
reverse_words	reverse_words.c	/^void reverse_words(char *s)$/;"	f	typeref:typename:void
rotate_left	rotate_array_left.c	/^void rotate_left(int array[], int length, int n)$/;"	f	typeref:typename:void
rotate_left_once	rotate_array_left.c	/^void rotate_left_once(int array[], int length)$/;"	f	typeref:typename:void
rotate_once_right	rotate_array_right.c	/^void rotate_once_right(int array[], int length)$/;"	f	typeref:typename:void
rotate_right	rotate_array_right.c	/^void rotate_right(int array[], int length, int n)$/;"	f	typeref:typename:void
safe_free	dangling_pointers.c	/^#define safe_free(/;"	d	file:
safe_free_mem	dangling_pointers.c	/^void safe_free_mem(void **ptr)$/;"	f	typeref:typename:void
scramble	word_scramble_game.c	/^void scramble(char *s)$/;"	f	typeref:typename:void
second_highest	second_highest.c	/^int second_highest(int a[], int length)$/;"	f	typeref:typename:int
second_lowest	second_lowest.c	/^int second_lowest(int a[], int length)$/;"	f	typeref:typename:int
select_operation	function_pointers.c	/^int (*select_operation())(int, int)$/;"	f	typeref:typename:int (*)(int,int)
set_array1	return_an_array.c	/^void set_array1(int value, int *array)$/;"	f	typeref:typename:void
set_array2	return_an_array.c	/^int *set_array2(int value)$/;"	f	typeref:typename:int *
set_array3	return_an_array.c	/^int *set_array3(int value)$/;"	f	typeref:typename:int *
set_difference	sets.c	/^Set *set_difference(Set *setA, Set *setB)$/;"	f	typeref:typename:Set *
set_equality	sets.c	/^bool set_equality(Set *setA, Set *setB)$/;"	f	typeref:typename:bool
set_intersection	sets.c	/^Set *set_intersection(Set *setA, Set *setB)$/;"	f	typeref:typename:Set *
set_random	set_random_2d_array_indexes.c	/^void set_random(int array[ROWS][COLS], int value, int total)$/;"	f	typeref:typename:void
set_union	sets.c	/^Set *set_union(Set *setA, Set *setB)$/;"	f	typeref:typename:Set *
shift_zeros	move_zeros.c	/^void shift_zeros(int array[], int length)$/;"	f	typeref:typename:void
shuffle	shuffle_2darray.c	/^void shuffle(int array[ROWS][COLS])$/;"	f	typeref:typename:void
shuffle	shuffle_array.c	/^void shuffle(int array[], int length)$/;"	f	typeref:typename:void
shuffle_string	shuffle_a_string.c	/^void shuffle_string(char *string, size_t length)$/;"	f	typeref:typename:void
size	libcurl_examples/store_http_response_into_string.c	/^  size_t size;$/;"	m	struct:__anon2063f8990108	typeref:typename:size_t	file:
size	queue_linked_list.c	/^  int size;$/;"	m	struct:__anon61cb19cc0108	typeref:typename:int	file:
size	queue_linked_list.c	/^int size(Queue *queue)$/;"	f	typeref:typename:int
size	stack.c	/^  int size;$/;"	m	struct:__anonadd2b0ec0108	typeref:typename:int	file:
smallest_word	smallest_word.c	/^int smallest_word(char *s)$/;"	f	typeref:typename:int
smallest_word	smallest_word_print.c	/^char* smallest_word(char *s)$/;"	f	typeref:typename:char *
sorted	check_if_array_sorted.c	/^bool sorted(int array[], int length)$/;"	f	typeref:typename:bool
sorted_ascending	check_if_array_sorted.c	/^bool sorted_ascending(int array[], int length)$/;"	f	typeref:typename:bool
sorted_descending	check_if_array_sorted.c	/^bool sorted_descending(int array[], int length)$/;"	f	typeref:typename:bool
sphere_volume	volume_of_a_sphere.c	/^double sphere_volume(double radius)$/;"	f	typeref:typename:double
split	split.c	/^char **split(char *string, char *seperators, int *count)$/;"	f	typeref:typename:char **
split	split_array_at_index.c	/^void split(int *array,$/;"	f	typeref:typename:void
split_nums	split_even_odd.c	/^void split_nums(int array[], int array_length,$/;"	f	typeref:typename:void
square_area	square_area.c	/^double square_area(double side)$/;"	f	typeref:typename:double
start	atexit.c	/^time_t start, end;$/;"	v	typeref:typename:time_t
startswith	startswith.c	/^bool startswith(char *string, char *start)$/;"	f	typeref:typename:bool
stdev	stdev.c	/^double stdev(double x[], int N)$/;"	f	typeref:typename:double
str_cpy1	your_own_strcpy.c	/^char *str_cpy1(char *destination, const char *source)$/;"	f	typeref:typename:char *
str_cpy2	your_own_strcpy.c	/^char *str_cpy2(char *destination, const char *source)$/;"	f	typeref:typename:char *
string	libcurl_examples/store_http_response_into_string.c	/^  char *string;$/;"	m	struct:__anon2063f8990108	typeref:typename:char *	file:
string_append	string_append.c	/^char *string_append(char *s1, char *s2)$/;"	f	typeref:typename:char *
string_equals	check_string_equality_recursive.c	/^bool string_equals(const char *s1, const char *s2)$/;"	f	typeref:typename:bool
string_length	string_length.c	/^int string_length(char *string)$/;"	f	typeref:typename:int
string_length	string_length_recursive.c	/^int string_length(char *string)$/;"	f	typeref:typename:int
string_split	split_string.c	/^void string_split(char *s, int index, char *first, char *second)$/;"	f	typeref:typename:void
students	include_guards/course.h	/^  Student students[100];$/;"	m	struct:__anon228106040108	typeref:typename:Student[100]
sub	basic_library/library.c	/^int sub(int x, int y)$/;"	f	typeref:typename:int
substring	substring.c	/^void substring(char *orig, char *substr, int index, int length)$/;"	f	typeref:typename:void
subtract	function_pointers.c	/^int subtract(int x, int y) { return x - y; }$/;"	f	typeref:typename:int
subtract_instruction	token_pasting_operator.c	/^void subtract_instruction(void)$/;"	f	typeref:typename:void
sum	head_vs_tail_recursion.c	/^int sum(int n)$/;"	f	typeref:typename:int
sum	parameters_vs_arguments.c	/^int sum(int a, int b)$/;"	f	typeref:typename:int
sum	stack_overflow.c	/^int sum(int a[], int length, int i)$/;"	f	typeref:typename:int
sum	sum.c	/^int sum(int array[], int length)$/;"	f	typeref:typename:int
sum	sum_naturals.c	/^int sum(int n)$/;"	f	typeref:typename:int
sumHead	head_vs_tail_recursion.c	/^int sumHead(int n, int result)$/;"	f	typeref:typename:int
sumTail	head_vs_tail_recursion.c	/^long sumTail(long n, long result)$/;"	f	typeref:typename:long
sumTailModified	head_vs_tail_recursion.c	/^long sumTailModified(long n, long result)$/;"	f	typeref:typename:long
sum_digits	sum_string_digits.c	/^int sum_digits(char *string)$/;"	f	typeref:typename:int
sum_integers	direct_vs_indirect_recursion.c	/^int sum_integers(int n)$/;"	f	typeref:typename:int
swap	pass_by_reference.c	/^void swap(int a, int b)$/;"	f	typeref:typename:void
swap	pointers.c	/^void swap(int *a, int *b)$/;"	f	typeref:typename:void
swap	quicksort.c	/^void swap(int *x, int *y)$/;"	f	typeref:typename:void
swap2	pass_by_reference.c	/^void swap2(int *a, int *b)$/;"	f	typeref:typename:void
swap_rows	swap_rows.c	/^void swap_rows(int array[ROWS][COLS], int rowA, int rowB)$/;"	f	typeref:typename:void
tail	queue_linked_list.c	/^  Node *tail;$/;"	m	struct:__anon61cb19cc0108	typeref:typename:Node *	file:
to_lower	own_tolower.c	/^int to_lower(int c)$/;"	f	typeref:typename:int
transpose	matrix_transpose.c	/^void transpose(int A[M][N], int T[N][M])$/;"	f	typeref:typename:void
trim	trim_leading_whitespace.c	/^void trim(char *s)$/;"	f	typeref:typename:void
trim	trim_trailing_whitespace.c	/^void trim(char *s)$/;"	f	typeref:typename:void
truncate_string	string_truncate.c	/^void truncate_string(char string[], int n)$/;"	f	typeref:typename:void
type	array_of_structs_to_csv.c	/^  char type;$/;"	m	struct:__anonb044834d0108	typeref:typename:char	file:
type	csv_to_struct_array.c	/^  char type;$/;"	m	struct:__anon4fd7ece60108	typeref:typename:char	file:
type	unions.c	/^  int type;$/;"	m	struct:__anon86543af20108	typeref:typename:int	file:
value	null_pointer.c	/^  int value;$/;"	m	struct:node	typeref:typename:int	file:
value	queue_linked_list.c	/^  int value;$/;"	m	struct:Node	typeref:typename:int	file:
vector_add	vector_add.c	/^void vector_add(float v1[], float v2[], float result[], int length)$/;"	f	typeref:typename:void
verify_password	verify_password.c	/^bool verify_password(char *p)$/;"	f	typeref:typename:bool
vowel_count	vowel_counter.c	/^int vowel_count(char *s)$/;"	f	typeref:typename:int
word_count	count_words.c	/^int word_count(char *s)$/;"	f	typeref:typename:int
word_count	word_count.c	/^int word_count(char *string, char *word)$/;"	f	typeref:typename:int
write_balance	mutex/bank.c	/^void write_balance(int new_balance)$/;"	f	typeref:typename:void
write_balance	race_condition_example/bank.c	/^void write_balance(int new_balance)$/;"	f	typeref:typename:void
write_chunk	libcurl_examples/store_http_response_into_string.c	/^size_t write_chunk(void *data, size_t size, size_t nmemb, void *userdata)$/;"	f	typeref:typename:size_t
write_data	struct_array_binary_file.c	/^bool write_data(char *filename, Student *data, int total)$/;"	f	typeref:typename:bool
x	arrow_operator.c	/^  int x;$/;"	m	struct:__anon3e38de4c0108	typeref:typename:int	file:
x	dynamic_array_of_structs.c	/^  int x;$/;"	m	struct:__anon7853da440108	typeref:typename:int	file:
x	local_vs_global_variables.c	/^int x = 1;$/;"	v	typeref:typename:int
x	struct.c	/^  int x;$/;"	m	struct:__anon9112fa7b0208	typeref:typename:int	file:
x	structure_padding.c	/^  char x;$/;"	m	struct:data	typeref:typename:char	file:
x	unions.c	/^    char x[1024];$/;"	m	union:__anon86543af20108::__anon86543af2020a	typeref:typename:char[1024]	file:
x	unions.c	/^  int x;$/;"	m	struct:Data2	typeref:typename:int	file:
x	unions.c	/^  int x;$/;"	m	union:Data	typeref:typename:int	file:
x	variable_scope.c	/^int x = 2;$/;"	v	typeref:typename:int
y	arrow_operator.c	/^  int y;$/;"	m	struct:__anon3e38de4c0108	typeref:typename:int	file:
y	dynamic_array_of_structs.c	/^  int y;$/;"	m	struct:__anon7853da440108	typeref:typename:int	file:
y	struct.c	/^  int y;$/;"	m	struct:__anon9112fa7b0208	typeref:typename:int	file:
y	structure_padding.c	/^  int y;$/;"	m	struct:data	typeref:typename:int	file:
y	unions.c	/^    float y[1024];$/;"	m	union:__anon86543af20108::__anon86543af2020a	typeref:typename:float[1024]	file:
y	unions.c	/^  double y;$/;"	m	struct:Data2	typeref:typename:double	file:
y	unions.c	/^  double y;$/;"	m	union:Data	typeref:typename:double	file:
y	variable_scope.c	/^int y = 3;$/;"	v	typeref:typename:int
z	unions.c	/^    double z[1024];$/;"	m	union:__anon86543af20108::__anon86543af2020a	typeref:typename:double[1024]	file:
z	unions.c	/^  char z[32];$/;"	m	struct:Data2	typeref:typename:char[32]	file:
z	unions.c	/^  char z[32];$/;"	m	union:Data	typeref:typename:char[32]	file:
